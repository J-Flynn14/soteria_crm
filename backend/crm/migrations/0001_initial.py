# Generated by Django 4.2.19 on 2025-02-27 18:09

import crm.models
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_status', models.CharField(choices=[('Submitted', 'Submitted'), ('Arranging Interview', 'Arranging Interview'), ('Interviewing', 'Interviewing'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected')], max_length=20)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('mobile_num', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('employer', models.CharField(blank=True, max_length=255, null=True)),
                ('roles_interested', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), blank=True, default=list, null=True, size=None)),
                ('uk_drivers_licence', models.CharField(blank=True, max_length=50, null=True)),
                ('postcode', models.CharField(blank=True, max_length=50, null=True)),
                ('notice_period', models.CharField(blank=True, max_length=100, null=True)),
                ('qualifications', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), blank=True, default=list, null=True, size=None)),
                ('experience', models.CharField(blank=True, max_length=50, null=True)),
                ('commute_time', models.CharField(blank=True, max_length=50, null=True)),
                ('current_dbs', models.CharField(blank=True, max_length=100, null=True)),
                ('current_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('convictions', models.BooleanField(blank=True, default=False, null=True)),
                ('desired_hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('companies_excluded', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), blank=True, default=list, null=True, size=None)),
                ('availability_shifts', models.CharField(blank=True, max_length=50, null=True)),
                ('share_cv', models.CharField(blank=True, max_length=50, null=True)),
                ('cv', models.FileField(blank=True, null=True, upload_to=crm.models.get_file_upload_to, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'txt'])])),
                ('anonymised_cv', models.FileField(blank=True, null=True, upload_to=crm.models.get_file_upload_to, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('form_results', models.JSONField(blank=True, null=True)),
                ('call_log', models.FileField(blank=True, null=True, upload_to=crm.models.get_file_upload_to, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['txt'])])),
                ('screening_notes', models.FileField(blank=True, null=True, upload_to=crm.models.get_file_upload_to, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['txt'])])),
                ('screening_status', models.CharField(choices=[('Not Screened', 'Not Screened'), ('Good Candidate', 'Good Candidate'), ('Indeterminate', 'Indeterminate'), ('Unsuccessful - Screening', 'Unsuccessful - Screening'), ('Unsuccessful - NSFW', 'Unsuccessful - NSFW'), ('Unsuccessful - Out of country', 'Unsuccessful - Out of country')], default='Not Screened')),
                ('form_submission_status', models.CharField(choices=[('Not Sent', 'Not Sent'), ('Pending', 'Pending'), ('Submitted', 'Submitted')], default='Not Sent', max_length=20)),
                ('screening_first_sent', models.DateTimeField(blank=True, null=True)),
                ('screening_second_sent', models.DateTimeField(blank=True, null=True)),
                ('screening_third_sent', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('industry', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('mobile_num', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts', to='crm.company')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('salary', models.CharField(max_length=255)),
                ('availability', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Closed', 'Closed')], max_length=20)),
                ('number_of_potential_candidates', models.IntegerField(default=0)),
                ('work_type', models.CharField(choices=[('Temporary', 'Temporary'), ('Permanent', 'Permanent')], max_length=20)),
                ('requirements', models.JSONField(blank=True, null=True)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='crm.company')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='crm.contact')),
            ],
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('recruiter', models.CharField(blank=True, max_length=255, null=True)),
                ('workplace_location', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placements', to='crm.candidate')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.contact')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placements', to='crm.job')),
            ],
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['name'], name='idx_company_name'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(condition=models.Q(('industry__isnull', False)), fields=['industry'], name='idx_company_industry'),
        ),
        migrations.AddIndex(
            model_name='candidate',
            index=models.Index(fields=['first_name'], name='idx_candidate_first_name'),
        ),
        migrations.AddIndex(
            model_name='candidate',
            index=models.Index(fields=['last_name'], name='idx_candidate_last_name'),
        ),
        migrations.AddIndex(
            model_name='candidate',
            index=models.Index(fields=['address'], name='idx_candidate_address'),
        ),
        migrations.AddIndex(
            model_name='candidate',
            index=models.Index(condition=models.Q(('position__isnull', False)), fields=['position'], name='idx_candidate_position'),
        ),
        migrations.AddField(
            model_name='application',
            name='candidate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='crm.candidate'),
        ),
        migrations.AddField(
            model_name='application',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='crm.job'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['first_name'], name='idx_contact_first_name'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['last_name'], name='idx_contact_last_name'),
        ),
    ]
